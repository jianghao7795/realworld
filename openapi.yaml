# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Realworld API
    description: The greeting service definition.
    version: 0.0.1
paths:
    /api/articles:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetArticles
            parameters:
                - name: slug
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ArticleListReply'
        post:
            tags:
                - Realworld
            operationId: Realworld_CreateArticle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.Article'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ArticleReply'
    /api/articles/{slug}:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ArticleReply'
        put:
            tags:
                - Realworld
            operationId: Realworld_UpdateArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.Article'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ArticleReply'
        delete:
            tags:
                - Realworld
            operationId: Realworld_DeleteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ArticleReply'
    /api/comments/{id}:
        delete:
            tags:
                - Realworld
            operationId: Realworld_DeleteComment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.CommentReply'
    /api/profiles/follow:
        post:
            tags:
                - Realworld
            operationId: Realworld_FollowUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.ProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ProfileReply'
    /api/profiles/{username}:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetProfile
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ProfileReply'
    /api/profiles/{username}/follow:
        delete:
            tags:
                - Realworld
            operationId: Realworld_UnfollowUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.ProfileReply'
    /api/tags:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetTagsList
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.TagListReply'
    /api/tags/{id}:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetTags
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.TagReply'
    /api/user:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetCurrentUser
            parameters:
                - name: email
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.UserReply'
    /api/user/{username}:
        put:
            tags:
                - Realworld
            operationId: Realworld_UpdateUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.UserRegister'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.UserReply'
    /api/users:
        post:
            tags:
                - Realworld
            operationId: Realworld_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.RegisterReply'
    /api/users/login:
        post:
            tags:
                - Realworld
            description: Sends a greeting
            operationId: Realworld_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.LoginReply'
    /api/{articleId}/comments:
        get:
            tags:
                - Realworld
            operationId: Realworld_GetComments
            parameters:
                - name: articleId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.CommentListReply'
        post:
            tags:
                - Realworld
            operationId: Realworld_AddComment
            parameters:
                - name: articleId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/realworld.v1.Comment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/realworld.v1.CommentReply'
components:
    schemas:
        realworld.v1.Article:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                slug:
                    type: string
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tag:
                    type: array
                    items:
                        $ref: '#/components/schemas/realworld.v1.Tag'
                createdAt:
                    type: string
                updatedAt:
                    type: string
                favorited:
                    type: boolean
                favoritesCount:
                    type: integer
                    format: uint32
                author:
                    $ref: '#/components/schemas/realworld.v1.Author'
        realworld.v1.ArticleListReply:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/realworld.v1.Article'
                total:
                    type: integer
                    format: int32
        realworld.v1.ArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/realworld.v1.Article'
        realworld.v1.Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        realworld.v1.Comment:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                body:
                    type: string
                articleId:
                    type: integer
                    format: int32
                author:
                    $ref: '#/components/schemas/realworld.v1.Author'
        realworld.v1.CommentListReply:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/realworld.v1.Comment'
                total:
                    type: integer
                    format: int32
        realworld.v1.CommentReply:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/realworld.v1.Comment'
        realworld.v1.LoginReply:
            type: object
            properties:
                token:
                    type: string
            description: The response message containing the greetings
        realworld.v1.LoginRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/realworld.v1.User'
            description: The request message containing the user's name.
        realworld.v1.ProfileReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/realworld.v1.ProfileReply_Profile'
        realworld.v1.ProfileReply_Profile:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        realworld.v1.ProfileRequest:
            type: object
            properties:
                username:
                    type: string
        realworld.v1.RegisterReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/realworld.v1.RegisterReply_User'
        realworld.v1.RegisterReply_User:
            type: object
            properties:
                token:
                    type: string
        realworld.v1.RegisterRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/realworld.v1.UserRegister'
            description: The request message containing the user's name.
        realworld.v1.Tag:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
        realworld.v1.TagListReply:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/realworld.v1.Tag'
                total:
                    type: integer
                    format: int32
        realworld.v1.TagReply:
            type: object
            properties:
                tag:
                    $ref: '#/components/schemas/realworld.v1.Tag'
        realworld.v1.User:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        realworld.v1.UserRegister:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                username:
                    type: string
        realworld.v1.UserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/realworld.v1.UserReply_Profile'
        realworld.v1.UserReply_Profile:
            type: object
            properties:
                email:
                    type: string
                username:
                    type: string
                token:
                    type: string
                bio:
                    type: string
                image:
                    type: string
tags:
    - name: Realworld
